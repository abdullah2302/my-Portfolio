{"version":3,"file":"static/js/632.2957ae30.chunk.js","mappings":"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","sources":["components/ProjectsSection.jsx","utils/assets.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { resolveAssetPath } from '../utils/assets';\r\nimport { useIntersectionObserver } from '../hooks';\r\n\r\nconst ProjectsSection = ({ projectsRef, projects, setSelectedProject, onProjectsVisibleChange }) => {\r\n  const [ref, isVisible] = useIntersectionObserver({\r\n    threshold: 0.1,\r\n    rootMargin: '0px 0px -100px 0px'\r\n  });\r\n\r\n  // Notify parent when this section becomes visible to activate the nav link\r\n  useEffect(() => {\r\n    if (isVisible && typeof onProjectsVisibleChange === 'function') {\r\n      onProjectsVisibleChange(true);\r\n    }\r\n    // We intentionally do not send false; multi-section observer manages deactivation\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isVisible]);\r\n\r\n  return (\r\n    <section\r\n      id=\"projects\"\r\n      ref={(el) => {\r\n        projectsRef.current = el;\r\n        ref.current = el;\r\n      }}\r\n      className=\"py-20 sm:py-24 px-4 sm:px-6 bg-slate-900 relative overflow-hidden\"\r\n    >\r\n      {/* Background Elements */}\r\n      <div className=\"absolute inset-0\">\r\n        <div className=\"absolute top-0 right-0 w-96 h-96 bg-gradient-to-br from-blue-500/10 to-purple-500/10 rounded-full blur-3xl\"></div>\r\n        <div className=\"absolute bottom-0 left-0 w-96 h-96 bg-gradient-to-br from-pink-500/10 to-purple-500/10 rounded-full blur-3xl\"></div>\r\n      </div>\r\n\r\n      <div className=\"container mx-auto max-w-7xl relative z-10\">\r\n        {/* Section Header */}\r\n        <div className={`text-center mb-16 transition-all duration-1000 transform ${\r\n          isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-8'\r\n        }`}>\r\n          <h2 className=\"text-4xl sm:text-5xl lg:text-6xl font-black mb-6 bg-clip-text text-transparent bg-gradient-to-r from-white via-blue-100 to-purple-100\">\r\n            My Projects\r\n          </h2>\r\n          <p className=\"text-xl text-white/60 max-w-3xl mx-auto\">\r\n            A collection of my latest work, showcasing my skills in modern web development and design\r\n          </p>\r\n        </div>\r\n\r\n        {/* Projects Grid */}\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8 lg:gap-10\">\r\n          {projects.map((project, index) => (\r\n            <div\r\n              key={project.id}\r\n              className={`group relative bg-white/5 backdrop-blur-xl border border-white/10 rounded-3xl overflow-hidden transition-all duration-700 transform hover:scale-105 hover:-translate-y-2 cursor-pointer ${\r\n                isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-8'\r\n              }`}\r\n              style={{ \r\n                animationDelay: `${index * 200}ms`,\r\n                transitionDelay: `${index * 100}ms`\r\n              }}\r\n              onClick={() => setSelectedProject(project)}\r\n            >\r\n              {/* Project Image */}\r\n              <div className=\"project-card__image-wrapper\">\r\n                <img\r\n                  src={resolveAssetPath(project.image)}\r\n                  alt={project.title}\r\n                  className=\"project-card__image transition-transform duration-500 group-hover:scale-110\"\r\n                  loading=\"lazy\"\r\n                  onError={(e) => {\r\n                    const target = e.currentTarget;\r\n                    // prevent infinite loop\r\n                    target.onerror = null;\r\n                    try { console.warn('Project image failed to load:', target.src); } catch (_) {}\r\n                    const placeholder = `data:image/svg+xml;utf8,${encodeURIComponent(\r\n                      `<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 800 450'>\\n` +\r\n                      `  <defs>\\n` +\r\n                      `    <linearGradient id='g' x1='0' y1='0' x2='1' y2='1'>\\n` +\r\n                      `      <stop offset='0%' stop-color='#334155'/>\\n` +\r\n                      `      <stop offset='100%' stop-color='#1f2937'/>\\n` +\r\n                      `    </linearGradient>\\n` +\r\n                      `  </defs>\\n` +\r\n                      `  <rect width='800' height='450' fill='url(#g)'/>\\n` +\r\n                      `  <g fill='none' stroke='#94a3b8' stroke-width='2' opacity='0.4'>\\n` +\r\n                      `    <rect x='40' y='40' width='720' height='370' rx='24'/>\\n` +\r\n                      `  </g>\\n` +\r\n                      `  <g fill='#e2e8f0' opacity='0.85' font-family='Inter, Arial, sans-serif' text-anchor='middle'>\\n` +\r\n                      `    <text x='400' y='230' font-size='28'>${project.title.replace(/&/g, '&amp;')}</text>\\n` +\r\n                      `    <text x='400' y='270' font-size='16' fill='#cbd5e1'>Image not available</text>\\n` +\r\n                      `  </g>\\n` +\r\n                      `</svg>`\r\n                    )}`;\r\n                    target.src = placeholder;\r\n                  }}\r\n                />\r\n                {/* Overlay */}\r\n                <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\r\n                \r\n                {/* Tech Stack Badges */}\r\n                <div className=\"absolute top-4 left-4 flex flex-wrap gap-2\">\r\n                  {project.tech.slice(0, 3).map((tech) => (\r\n                    <span\r\n                      key={tech}\r\n                      className=\"px-3 py-1 bg-white/20 backdrop-blur-md text-white text-xs rounded-full border border-white/30\"\r\n                    >\r\n                      {tech}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Project Content */}\r\n              <div className=\"p-6\">\r\n                <h3 className=\"text-xl font-bold mb-3 text-white group-hover:text-blue-300 transition-colors duration-300\">\r\n                  {project.title}\r\n                </h3>\r\n                \r\n                <p className=\"text-white/70 text-sm leading-relaxed mb-4 line-clamp-3\">\r\n                  {project.desc}\r\n                </p>\r\n\r\n                {/* Tech Stack */}\r\n                <div className=\"flex flex-wrap gap-2 mb-6\">\r\n                  {project.tech.map((tech) => (\r\n                    <span\r\n                      key={tech}\r\n                      className=\"px-3 py-1 bg-gradient-to-r from-blue-500/20 to-purple-500/20 text-blue-300 text-xs rounded-full border border-blue-500/30\"\r\n                    >\r\n                      {tech}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n\r\n                {/* Action Buttons */}\r\n                <div className=\"flex gap-3\">\r\n                  <a\r\n                    href={project.liveLink}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"flex-1 px-4 py-2 bg-gradient-to-r from-blue-500 to-purple-600 text-white text-sm font-medium rounded-xl text-center transition-all duration-300 hover:shadow-lg hover:shadow-blue-500/25 transform hover:scale-105\"\r\n                    onClick={(e) => e.stopPropagation()}\r\n                  >\r\n                    Live Demo\r\n                  </a>\r\n                  <a\r\n                    href={project.repoLink}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"flex-1 px-4 py-2 border border-white/20 text-white/80 text-sm font-medium rounded-xl text-center transition-all duration-300 hover:bg-white/10 hover:border-white/40 hover:text-white transform hover:scale-105\"\r\n                    onClick={(e) => e.stopPropagation()}\r\n                  >\r\n                    GitHub\r\n                  </a>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Hover Glow Effect */}\r\n              <div className=\"absolute inset-0 bg-gradient-to-r from-blue-500/10 to-purple-500/10 rounded-3xl opacity-0 group-hover:opacity-100 transition-opacity duration-500\"></div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Call to Action */}\r\n        <div className={`text-center mt-16 transition-all duration-1000 transform ${\r\n          isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-8'\r\n        }`} style={{ transitionDelay: '600ms' }}>\r\n          <div className=\"inline-flex items-center px-6 py-3 rounded-2xl bg-white/5 backdrop-blur-md border border-white/10 text-white/80\">\r\n            <span className=\"w-2 h-2 bg-blue-400 rounded-full mr-3 animate-pulse\"></span>\r\n            More projects coming soon...\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ProjectsSection;\r\n","export const resolveAssetPath = (path) => {\r\n  if (!path) return '';\r\n  // absolute or data URI: return as-is\r\n  if (/^(https?:)?\\/\\//i.test(path) || path.startsWith('data:')) {\r\n    return path;\r\n  }\r\n  const base = process.env.PUBLIC_URL || '';\r\n  return `${base}${path.startsWith('/') ? path : `/${path}`}`;\r\n};\r\n\r\n\r\n"],"names":["_ref","projectsRef","projects","setSelectedProject","onProjectsVisibleChange","ref","isVisible","useIntersectionObserver","threshold","rootMargin","useEffect","_jsxs","id","el","current","className","children","_jsx","concat","map","project","index","style","animationDelay","transitionDelay","onClick","src","resolveAssetPath","image","alt","title","loading","onError","e","target","currentTarget","onerror","console","warn","_","placeholder","encodeURIComponent","replace","tech","slice","desc","href","liveLink","rel","stopPropagation","repoLink","path","test","startsWith"],"sourceRoot":""}